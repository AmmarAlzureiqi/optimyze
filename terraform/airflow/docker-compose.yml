x-common: &common
  image: apache/airflow:2.10.2
  user: "${AIRFLOW_UID:-50000}:0"
  env_file:
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./requirements.txt:/requirements.txt
  depends_on: &depends-on
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:
  postgres:
    image: postgres:13
    container_name: optimyze-postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    env_file:
      - .env
    volumes:
      - postgres_db_volume:/var/lib/postgresql/data

  airflow-init:
    <<: *common
    container_name: optimyze-airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        if [[ -f "/requirements.txt" ]]; then
          pip install --no-cache-dir -r /requirements.txt
        fi
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID:-50000}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version

  scheduler:
    <<: *common
    container_name: optimyze-airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"

  webserver:
    <<: *common
    container_name: optimyze-airflow-webserver
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5
    restart: always

volumes:
  postgres_db_volume: